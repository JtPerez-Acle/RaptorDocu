FROM python:3.12-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=false \
    POETRY_NO_INTERACTION=1

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="$POETRY_HOME/bin:$PATH"

# Copy pyproject.toml and lock file (if available)
COPY pyproject.toml poetry.lock* ./

# Install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi

# Copy the rest of the application
COPY . .

# Run tests during build to verify functionality
RUN poetry run pytest || true
RUN poetry run black --check . || true
RUN poetry run isort --check . || true
RUN poetry run mypy . || true

# Expose port
EXPOSE 8080

# Create verification script
RUN echo '#!/bin/sh\necho "Running Python health checks..."\npoetry run pytest || true\necho "Health verification completed. Starting service..."' > /verify-health.sh
RUN chmod +x /verify-health.sh

# Start development server
CMD ["/bin/sh", "-c", "/verify-health.sh && poetry run uvicorn src.app:app --host 0.0.0.0 --port 8080 --reload"]